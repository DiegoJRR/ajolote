/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/signal": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.signal.id"];
          created_at?: parameters["rowFilter.signal.created_at"];
          value?: parameters["rowFilter.signal.value"];
          type?: parameters["rowFilter.signal.type"];
          user?: parameters["rowFilter.signal.user"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["signal"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** signal */
          signal?: definitions["signal"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.signal.id"];
          created_at?: parameters["rowFilter.signal.created_at"];
          value?: parameters["rowFilter.signal.value"];
          type?: parameters["rowFilter.signal.type"];
          user?: parameters["rowFilter.signal.user"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.signal.id"];
          created_at?: parameters["rowFilter.signal.created_at"];
          value?: parameters["rowFilter.signal.value"];
          type?: parameters["rowFilter.signal.type"];
          user?: parameters["rowFilter.signal.user"];
        };
        body: {
          /** signal */
          signal?: definitions["signal"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/alert": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.alert.id"];
          created_at?: parameters["rowFilter.alert.created_at"];
          insight?: parameters["rowFilter.alert.insight"];
          acknowledge?: parameters["rowFilter.alert.acknowledge"];
          user?: parameters["rowFilter.alert.user"];
          severity?: parameters["rowFilter.alert.severity"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["alert"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** alert */
          alert?: definitions["alert"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.alert.id"];
          created_at?: parameters["rowFilter.alert.created_at"];
          insight?: parameters["rowFilter.alert.insight"];
          acknowledge?: parameters["rowFilter.alert.acknowledge"];
          user?: parameters["rowFilter.alert.user"];
          severity?: parameters["rowFilter.alert.severity"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.alert.id"];
          created_at?: parameters["rowFilter.alert.created_at"];
          insight?: parameters["rowFilter.alert.insight"];
          acknowledge?: parameters["rowFilter.alert.acknowledge"];
          user?: parameters["rowFilter.alert.user"];
          severity?: parameters["rowFilter.alert.severity"];
        };
        body: {
          /** alert */
          alert?: definitions["alert"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/insight": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.insight.id"];
          created_at?: parameters["rowFilter.insight.created_at"];
          value?: parameters["rowFilter.insight.value"];
          user?: parameters["rowFilter.insight.user"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["insight"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** insight */
          insight?: definitions["insight"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.insight.id"];
          created_at?: parameters["rowFilter.insight.created_at"];
          value?: parameters["rowFilter.insight.value"];
          user?: parameters["rowFilter.insight.user"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.insight.id"];
          created_at?: parameters["rowFilter.insight.created_at"];
          value?: parameters["rowFilter.insight.value"];
          user?: parameters["rowFilter.insight.user"];
        };
        body: {
          /** insight */
          insight?: definitions["insight"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  signal: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    value: number;
    type: string;
    user: string;
  };
  alert: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    /**
     * Note:
     * This is a Foreign Key to `insight.id`.<fk table='insight' column='id'/>
     */
    insight: number;
    acknowledge?: boolean;
    user: string;
    severity: number;
  };
  insight: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    value?: { [key: string]: any };
    user: string;
  };
}

export interface parameters {
  /** Preference */
  preferParams: "params=single-object";
  /** Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** Preference */
  preferCount: "count=none";
  /** Filtering Columns */
  select: string;
  /** On Conflict */
  on_conflict: string;
  /** Ordering */
  order: string;
  /** Limiting and Pagination */
  range: string;
  /** Limiting and Pagination */
  rangeUnit: string;
  /** Limiting and Pagination */
  offset: string;
  /** Limiting and Pagination */
  limit: string;
  /** signal */
  "body.signal": definitions["signal"];
  "rowFilter.signal.id": string;
  "rowFilter.signal.created_at": string;
  "rowFilter.signal.value": string;
  "rowFilter.signal.type": string;
  "rowFilter.signal.user": string;
  /** alert */
  "body.alert": definitions["alert"];
  "rowFilter.alert.id": string;
  "rowFilter.alert.created_at": string;
  "rowFilter.alert.insight": string;
  "rowFilter.alert.acknowledge": string;
  "rowFilter.alert.user": string;
  "rowFilter.alert.severity": string;
  /** insight */
  "body.insight": definitions["insight"];
  "rowFilter.insight.id": string;
  "rowFilter.insight.created_at": string;
  "rowFilter.insight.value": string;
  "rowFilter.insight.user": string;
}

export interface operations {}
